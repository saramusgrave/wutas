@using KlamathIrrigationDistrict.DataLayer.DataModels
@using PagedList.Mvc;
@model PagedList.IPagedList<KIDStaff>
@*@model List<KIDStaff>*@
@{ 
    ViewBag.Title = "KID Staff: Home Page";
}
<link rel="stylesheet" href="~/Styles/OfficeStaff.css" />
<link rel="stylesheet" href="~/Scripts/KIDDitchRidersJS.js"/>
<header id="OfficeStaffMenu">
    <ul>
        <li><label class="FirstLast">Linda.Seater</label></li>
        <li><a href="/OfficeStaff/ViewCustomers">Customers</a></li>
        <li><a id="active href="Index" ">Staff</a></li>
        <li><a href="/MapTaxLot/Index">MapTaxLot</a></li>
        <li><a href="~/Account/Login" class="LogOutBtn">Log Out</a></li>
    </ul>
</header>
<body>
   <!--List of Ditch Riders, Relief Ditch Riders, Phone Number and Position at KID class=DitchRiderContacts-->
    <a href="Add" class="next">Add &raquo;</a>
    <input type="search" id="SearchKIDStaff" onkeyup="SearchKIDStaff()" placeholder="Search for Position" />
    <div style="overflow: auto;">
        <table class="OfficeStaffCustomers" id="TableKIDStaff">
            <caption>KID Staff</caption>
                <tr>
                    <th>@Html.Label("Staff ID")</th>
                    <th>@Html.Label("Position")</th>
                    <th>@Html.Label("First Name")</th>
                    <th>@Html.Label("Last Name")</th>
                    <th>@Html.Label("Password")</th>
                    <th>@Html.Label("Email")</th>
                    <th>@Html.Label("Phone Number")</th>
                    <th>@Html.Label("Saff Status")</th>
                    <th>@Html.Label("Start Date")</th>
                    <th>@Html.Label("End Date")</th>
                    <th>@Html.Label("Modified Date")</th>
                    <th>@Html.Label("Modified By")</th>
                    <th>@Html.Label("Edit Staff")</th>
                </tr>
            @*Need to display list as Position = KIDStaff.Position = Positions.Position where KIDStaff.Position = Positions.PositionID*@
            @*Need to have staff status filter*@
          
            @for (int i = 0; i < Model.Count; i++)
            {
                <tr>
                    <td>@Model[i].StaffID</td>
                    <td>@Model[i].Position</td>
                    <td>@Model[i].FirstName</td>
                    <td>@Model[i].LastName</td>
                    <td>@Model[i].Password</td>
                    <td>@Model[i].Email</td>
                    <td>@Model[i].PhoneNumber</td>
                    <td>@Model[i].StaffStatus</td>
                    <td>@Model[i].StartDate.ToShortDateString()</td>
                    <td>@Model[i].EndDate.ToShortDateString()</td>
                    <td>@Model[i].ModifiedDateTime</td>
                    <td>@Model[i].ModifiedUser</td>
                    <td>
                        <!--below will create link for the button labeled "Edit Staff" referencing action of StaffEdit function-->
                        @Html.ActionLink("Edit Staff", "StaffEdit", new { @StaffID = Model[i].StaffID})
                    </td>
                </tr>
            }
        </table>
    </div>
    <div class="pagination" style="margin-left: 20px;">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
        of @Model.PageCount @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
    </div>
    <br />
</body>