@using KlamathIrrigationDistrict.DataLayer.DataModels
@using PagedList.Mvc;
@model PagedList.IPagedList<DitchRiderRequests>
@*@model List<DitchRiderCustomers>*@
@{
    ViewBag.Title = "KID D.R.: Customers With Water On";
}
<head>
    <title>KID: Ditch Rider</title>
    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" href="~/Styles/DitchRiders.css" />
    <link rel="stylesheet" href="~/Scripts/KIDDitchRidersJS.js" />
    <script>
        function SearchCustomersFn() {
            var input, filter, table, tr, td, i;
            input = document.getElementById("SearchCustomers");
            filter = input.value.toUpperCase();
            table = document.getElementById("ActiveRequests");
            tr = table.getElementsByTagName("tr");
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[0];
                if (td) {
                    if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    }
                    else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }
    </script>
</head>
<!--List of Rides class=dropdownRide-->
<header id="Header">
    <div id="RideCenter">
        <a class="dropdown">Ride 4</a>
    </div>
    <!--Log in Name, Customers, Requests, Canals, LogOut id=Menu-->
    <ul id="Menu">
        <li><label class="FirstLast">@User.Identity.Name</label></li>
        <li class="dropdown">
            <a href="Customers4" id="active">Customers</a>
            <div class="dropdownRequest" style="overflow-x: auto;">
                <a href="/DitchRiders/Customers_4On" id="active">Customers With Water On</a>
            </div>
        </li>
        <li class="dropdown">
            <a class="RequestDropDown" href="Index4">Requests</a>
            <!--Requests drop down menu class=dropdownRequest-->
            <div class="dropdownRequest" style="overflow-x: auto;">
                <a href="/DitchRiders/Index4">Active Requests On</a>
                <a href="/DitchRiders/_ActiveRequestsOff4">Active Requests Off</a>
                <a href="/DitchRiders/Appending_4On">Appending On</a>
                <a href="/DitchRiders/Appending_4Off">Appending Off</a>
                <a href="/DitchRiders/CompletedRequests">Completed Requests</a>
                <a href="/DitchRiders/WaitList_4On">Waitlist On</a>
                <a href="/DitchRiders/WaitList_4Off">Waitlist Off</a>
            </div>
        </li>
        <li>
            <a href="/DitchRiders/CanalWater">Canals</a>
        </li>
        <li>
            <a href="~/Account/Login">Log Out</a>
        </li>
    </ul>
</header>
<body>
    <input type="text" id="SearchCustomers" onkeyup="SearchCustomersFn()" placeholder="Search Customers by Name" title="Type in a name" />

    <div style="overflow-x: auto;">
        <!--Completed Requests class=ActiveRequests-->
        <table class="ActiveRequests">
            <caption>Customers who are currently running water</caption>
            <tr>
                <th>@Html.Label("Name")</th>
                <th>@Html.Label("Structure")</th>
                <th>@Html.Label("Lateral")</th>
                <th>@Html.Label("Total Allotment")</th>
                <th>@Html.Label("CFS Running")</th>
                <th>@Html.Label("Turn On Date")</th>
                <th>@Html.Label("Log Water")</th>
            </tr>
            @for (int i = 0; i < Model.Count; i++)
            {
                <tr>
                    <td>@Model[i].CustomerName</td> 
                    <td>@Model[i].Structure</td>
                    <td>@Model[i].Lateral</td>
                    <td>@Model[i].TotalAllotment</td>
                    <td>@Model[i].StaffCFS1</td>
                    <td>@Model[i].StaffDate1.ToShortDateString()</td>
                    <td>@Html.ActionLink("Off", "_AddRequest4Off", new { @RequestID = Model[i].RequestID })</td>
                </tr>
            }
        </table>
    </div>
    <div class="pagination" style="margin-left: 20px;">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
        of @Model.PageCount @Html.PagedListPager(Model, page => Url.Action("Customers_4On", new { page }))
    </div><br />
</body>
